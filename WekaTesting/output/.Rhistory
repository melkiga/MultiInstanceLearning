data(musk)
Rdata(musk)
install.packages("kernlab")
library(kernlab)
data
data("musk")
View(musk)
library(PMCMR)
setwd("/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/output")
data <- read.csv(file="accuracy.csv",head=TRUE,sep=",")
numCols <- length(data)
data <- data[2:numCols]
data <- data.matrix(data, rownames.force = NA)
stats <- posthoc.friedman.nemenyi.test(data)
nemenyi <- matrix(unlist(stats[3]))
nemenyi <- nemenyi[1:11]
holm <- p.adjust(nemenyi, method = 'holm', n = length(nemenyi))
summary(nemenyi)
nemenyi
stats
friedman.test(data)
stats
install.packages("mlr")
library(mlr)
generateCritDifferencesData(data, measure = NULL, p.value = 0.05, baseline = NULL, test = "bd")
generateCritDifferencesData(bmr = data, measure = NULL, p.value = 0.05, baseline = NULL, test = "bd")
generateCritDifferencesData(bmr = -data, measure = NULL, p.value = 0.05, baseline = NULL, test = "bd")
BenchmarkResult
?BenchmarkResult
generateCritDifferencesData(bmr = stats, measure = NULL, p.value = 0.05, baseline = NULL, test = "bd")
?dunn
?dunn.test.control
dunn.test.control(data[1,],data[2,], "bonferroni")
friedman.test(data)
?friedman.test
?friedman.test.default
?posthoc.friedman.nemenyi.test(date)
?posthoc.friedman.nemenyi.test(data)
posthoc.friedman.nemenyi.test(data)
bmr = benchmark(data, show.info = FALSE)
data <- read.csv(file="accuracy.csv",head=TRUE,sep=",")
data
bmr = benchmark(data, show.info = FALSE)
posthoc.kruskal.dunn.test(data)
library(PMCMR)
setwd("/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/output")
data <- read.csv(file="accuracy.csv",head=TRUE,sep=",")
numCols <- length(data)
data <- data[2:numCols]
data <- data.matrix(data, rownames.force = NA)
stats <- posthoc.friedman.nemenyi.test(data)
nemenyi <- matrix(unlist(stats[3]))
nemenyi <- nemenyi[1:11]
holm <- p.adjust(nemenyi, method = 'holm', n = length(nemenyi))
holm
nemenyi
shaf <- p.adjust(nemenyi, method = 'shaffer', n = length(nemenyi))
shaf <- p.adjust(nemenyi, method = 'bonferroni', n = length(nemenyi))
shaf
postHocTest(data, algorithms = NULL, group.by = NULL, test = "friedman", control = NULL, use.rank = FALSE, sum.fun = mean, correct = "finner", alpha = 0.05, ...)
install.packages("scmamp")
library(scmamp)
install.packages("graph")
library(scmamp)
wilcox.test(data$MIMV, data$MIOBall, paired=TRUE)$p.value
wilcox.test(data[1,], data[$MIOBall]2,, paired=TRUE)$p.value
wilcox.test(data[1,], data[2,], paired=TRUE)$p.value
?p.adjust.methods
library(PMCMR)
setwd("/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/output")
data <- read.csv(file="accuracy.csv",head=TRUE,sep=",")
numCols <- length(data)
data <- data[2:numCols]
data <- data.matrix(data, rownames.force = NA)
stats <- posthoc.friedman.nemenyi.test(data)
nemenyi <- matrix(unlist(stats[3]))
nemenyi <- nemenyi[1:11]
holm <- p.adjust(nemenyi, method = 'holm', n = length(nemenyi))
bonf <- p.adjust(nemenyi, method = 'fdr', n = length(nemenyi))
bonf
pvals <- data.frame(nemenyi,holm,bonf)
library(PMCMR)
setwd("/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/output")
data <- read.csv(file="accuracy.csv",head=TRUE,sep=",")
numCols <- length(data)
data <- data[2:numCols]
data <- data.matrix(data, rownames.force = NA)
stats <- posthoc.friedman.nemenyi.test(data)
nemenyi <- matrix(unlist(stats[3]))
nemenyi <- nemenyi[1:11]
holm <- p.adjust(nemenyi, method = 'holm', n = length(nemenyi))
bonf <- p.adjust(nemenyi, method = 'fdr', n = length(nemenyi))
pvals <- data.frame(nemenyi,holm,bonf)
write.csv(MyData, file = "/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/stats/p_val_acc.csv")
library(PMCMR)
setwd("/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/output")
data <- read.csv(file="accuracy.csv",head=TRUE,sep=",")
numCols <- length(data)
data <- data[2:numCols]
data <- data.matrix(data, rownames.force = NA)
stats <- posthoc.friedman.nemenyi.test(data)
nemenyi <- matrix(unlist(stats[3]))
nemenyi <- nemenyi[1:11]
holm <- p.adjust(nemenyi, method = 'holm', n = length(nemenyi))
bonf <- p.adjust(nemenyi, method = 'fdr', n = length(nemenyi))
pvals <- data.frame(nemenyi,holm,bonf)
write.csv(pvals, file = "/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/stats/p_val_acc.csv")
stats
stats
nemenyi
library(PMCMR)
setwd("/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/output")
data <- read.csv(file="accuracy.csv",head=TRUE,sep=",")
numCols <- length(data)
data <- data[2:numCols]
data <- data.matrix(data, rownames.force = NA)
stats <- posthoc.friedman.nemenyi.test(data)
full <- matrix(unlist(stats[3]))
nemenyi <- nemenyi[1:11]
holm <- p.adjust(full, method = 'holm', n = length(nemenyi))
bonf <- p.adjust(full, method = 'fdr', n = length(nemenyi))
library(PMCMR)
setwd("/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/output")
data <- read.csv(file="accuracy.csv",head=TRUE,sep=",")
numCols <- length(data)
data <- data[2:numCols]
data <- data.matrix(data, rownames.force = NA)
stats <- posthoc.friedman.nemenyi.test(data)
full <- matrix(unlist(stats[3]))
nemenyi <- full[1:11]
p.adjust(full, method = 'holm', n = length(nemenyi))
full[1,]
full[,1]
full[1]
library(PMCMR)
setwd("/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/output")
data <- read.csv(file="accuracy.csv",head=TRUE,sep=",")
numCols <- length(data)
data <- data[2:numCols]
data <- data.matrix(data, rownames.force = NA)
stats <- posthoc.friedman.nemenyi.test(data)
full <- matrix(unlist(stats[3]))
nemenyi <- full[1:11]
holm <- p.adjust(nemenyi, method = 'holm', n = length(nemenyi))
bonf <- p.adjust(nemenyi, method = 'fdr', n = length(nemenyi))
pvals <- data.frame(nemenyi,holm,bonf)
write.csv(pvals, file = "/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/stats/p_val_acc.csv")
library(PMCMR)
setwd("/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/output")
data <- read.csv(file="accuracy.csv",head=TRUE,sep=",")
numCols <- length(data)
data <- data[2:numCols]
data <- data.matrix(data, rownames.force = NA)
stats <- posthoc.friedman.nemenyi.test(-data)
full <- matrix(unlist(stats[3]))
nemenyi <- full[1:11]
holm <- p.adjust(nemenyi, method = 'holm', n = length(nemenyi))
bonf <- p.adjust(nemenyi, method = 'fdr', n = length(nemenyi))
pvals <- data.frame(nemenyi,holm,bonf)
write.csv(pvals, file = "/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/stats/p_val_acc.csv")
library(PMCMR)
setwd("/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/output")
data <- read.csv(file="accuracy.csv",head=TRUE,sep=",")
numCols <- length(data)
data <- data[2:numCols]
data <- data.matrix(data, rownames.force = NA)
stats <- posthoc.friedman.nemenyi.test(-data)
full <- matrix(unlist(stats[3]))
nemenyi <- full[1:11]
holm <- p.adjust(nemenyi, method = 'holm', n = length(nemenyi))
bonf <- p.adjust(nemenyi, method = 'fdr', n = length(nemenyi))
pvals <- data.frame(nemenyi,holm,bonf)
write.csv(pvals, file = "/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/stats/p_val_acc.csv")
pvals
library(PMCMR)
setwd("/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/output")
data <- read.csv(file="accuracy.csv",head=TRUE,sep=",")
numCols <- length(data)
data <- data[2:numCols]
data <- data.matrix(data)
data <- -data
View(data)
library(PMCMR)
setwd("/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/output")
data <- read.csv(file="accuracy.csv",head=TRUE,sep=",")
numCols <- length(data)
data <- data[2:numCols]
data <- data.matrix(data)
data <- -data
stats <- posthoc.friedman.nemenyi.test(data)
full <- matrix(unlist(stats[3]))
nemenyi <- full[1:11]
holm <- p.adjust(nemenyi, method = 'holm', n = length(nemenyi))
shaf <- p.adjust(nemenyi, method = 'fdr', n = length(nemenyi))
pvals <- data.frame(nemenyi,holm,shaf)
write.csv(pvals, file = "/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/stats/p_val_acc.csv")
View(pvals)
?posthoc.friedman.nemenyi.test
friedman.test(data)
f <- friedman.test(data)
print(f)
f
?friedman.test
f.p.value
unlist(f)
?posthoc.friedman.nemenyi.test
?aov
library(PMCMR)
setwd("/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/output")
data <- read.csv(file="accuracy.csv",head=TRUE,sep=",")
numCols <- length(data)
data <- data[2:numCols]
data <- data.matrix(data)
data <- -data
stats <- posthoc.friedman.nemenyi.test(data)
full <- matrix(unlist(stats[3]))
nemenyi <- full[1:11]
holm <- p.adjust(nemenyi, method = 'holm', n = length(nemenyi))
shaf <- p.adjust(nemenyi, method = 'bonferroni', n = length(nemenyi))
pvals <- data.frame(nemenyi,holm,shaf)
write.csv(pvals, file = "/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/stats/p_val_acc.csv")
library(PMCMR)
setwd("/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/output")
data <- read.csv(file="accuracy.csv",head=TRUE,sep=",")
numCols <- length(data)
data <- data[2:numCols]
data <- data.matrix(data)
data <- -data
stats <- posthoc.friedman.nemenyi.test(data)
full <- matrix(unlist(stats[3]))
nemenyi <- full[1:11]
holm <- p.adjust(nemenyi, method = 'holm', n = length(nemenyi))
shaf <- p.adjust(nemenyi, method = 'bonferroni', n = length(nemenyi))
pvals <- data.frame(nemenyi,holm,shaf)
write.csv(pvals, file = "/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/stats/p_val_acc.csv")
?friedman.test
friedman.test(data)
rm(list = ls())
library(PMCMR)
setwd("/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/output")
data <- read.csv(file="accuracy.csv",head=TRUE,sep=",")
numCols <- length(data)
data <- data[2:numCols]
friedman.test(data)
rm(list = ls())
library(PMCMR)
setwd("/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/output")
data <- read.csv(file="accuracy.csv",head=TRUE,sep=",")
numCols <- length(data)
data <- data[2:numCols]
data <- data.matrix(data)
friedman.test(data)
stats <- posthoc.friedman.nemenyi.test(data)
stats
rm(list = ls())
library(PMCMR)
setwd("/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/output")
data <- read.csv(file="accuracy.csv",head=TRUE,sep=",")
numCols <- length(data)
data <- data[2:numCols]
data <- data.matrix(data)
friedman.test(data)
stats <- posthoc.friedman.nemenyi.test(data)
stats
rm(list = ls())
library(PMCMR)
setwd("/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/output")
metrics = c("accuracy","precision","recall","kappa","auc","time");
for (metric in metrics){
print(paste("Analyzing ", metric))
}
n <- paste("acc",".csv")
n
n <- paste("acc",".csv", sep = "")
n
data <- read.csv(file="accuracy.csv",head=TRUE,sep=",")
numCols <- length(data)
data
data <- data[2:numCols]
data
rm(list = ls())
library(PMCMR)
setwd("/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/output")
metrics = c("accuracy","precision","recall","kappa","auc","time");
for (metric in metrics){
print(paste("Analyzing: ", metric))
# get data & form into matrix
data <- read.csv(file = paste(metric,".csv", sep = ""), head = TRUE, sep = ",")
numAlgs <- length(data)
data <- data[2:numAlgs]
data <- data.matrix(data)
# run friedman & get p-values for Nemenyi, Holm, and Shaffer
friedman.test(data)
stats <- posthoc.friedman.nemenyi.test(data)
full <- matrix(unlist(stats[3]))
nemenyi <- full[1:11]
holm <- p.adjust(nemenyi, method = 'holm', n = length(nemenyi))
shaf <- p.adjust(nemenyi, method = 'bonferroni', n = length(nemenyi))
pvals <- data.frame(nemenyi,holm,shaf)
# write file
write.csv(pvals, file = paste("/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/stats/",metric,"_pVal.csv", sep = ""))
}
install.packages("scmamp")
library(scmamp)
## try http:// if https:// URLs are not supported
source("https://bioconductor.org/biocLite.R")
biocLite("graph")
library(scmamp)
install.packages("Rgraphviz")
source("https://bioconductor.org/biocLite.R")
biocLite("Rgraphviz")
library(scmamp)
data <- read.csv(file="accuracy.csv",head=TRUE,sep=",")
numCols <- length(data)
data <- data[2:numCols]
data <- data.matrix(data)
friedman.test(data)
stats <- posthoc.friedman.nemenyi.test(data)
full <- matrix(unlist(stats[3]))
nemenyi <- full[1:11]
nemenyi
adjustShaffer(data)
adjustShaffer(full)
data.frame(full)
d <- data.frame(full)
adjustShaffer(d)
adjustShaffer(stats)
adjustShaffer(full)
adjustShaffer(nemenji)
adjustShaffer(nemenyi)
nemenyi
full
data
data <- read.csv(file="accuracy.csv",head=TRUE,sep=",")
numCols <- length(data)
data <- data[2:numCols]
data <- data.matrix(data)
friedman.test(data)
stats <- posthoc.friedman.nemenyi.test(data)
full <- matrix(unlist(stats[3]))
full
stats
stats[3]
stats[3,]
matrix(stats[3])
matrix(unlist(stats[3]))
nemenyi <- full[1:11]
nemenyi
stats
stats[3]
matrix_stats <- stats[3]
do.call(rbind, matrix_stats)
mat_st <- do.call(rbind, matrix_stats)
mat_st
View(mat_st)
adjustShaffer(mat_st)
mat_st[upper.tri(mat_st)] <- t(mat_st)[upper.tri(mat_st)]
adjustShaffer(mat_st)
shaffer_mat <- adjustShaffer(mat_st)
shaffer_mat[2]
shaffer_mat[1]
shaffer_mat[,1]
matrix(shaffer_mat[,1])
rm(list = ls())
library(PMCMR)
library(scmamp)
setwd("/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/output")
metrics = c("accuracy","precision","recall","kappa","auc","time");
for (metric in metrics){
print(paste("Analyzing: ", metric))
# get data & form into matrix
data <- read.csv(file = paste(metric,".csv", sep = ""), head = TRUE, sep = ",")
numAlgs <- length(data)
data <- data[2:numAlgs]
data <- data.matrix(data)
matrix_stats <- stats[3]
mat_st <- do.call(rbind, matrix_stats)
mat_st[upper.tri(mat_st)] <- t(mat_st)[upper.tri(mat_st)]
shaffer_mat <- adjustShaffer(mat_st)
# run friedman & get p-values for Nemenyi, Holm, and Shaffer
friedman.test(data)
stats <- posthoc.friedman.nemenyi.test(data)
full <- matrix(unlist(stats[3]))
nemenyi <- full[1:11]
holm <- p.adjust(nemenyi, method = 'holm', n = length(nemenyi))
shaf <- shaffer_mat[,1]
pvals <- data.frame(nemenyi,holm,shaf)
# write file
write.csv(pvals, file = paste("/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/stats/",metric,"_pVal.csv", sep = ""))
}
rm(list = ls())
library(PMCMR)
library(scmamp)
setwd("/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/output")
metrics = c("accuracy","precision","recall","kappa","auc","time");
for (metric in metrics){
print(paste("Analyzing: ", metric))
# get data & form into matrix
data <- read.csv(file = paste(metric,".csv", sep = ""), head = TRUE, sep = ",")
numAlgs <- length(data)
data <- data[2:numAlgs]
data <- data.matrix(data)
# run friedman & get p-values for Nemenyi, Holm, and Shaffer
friedman.test(data)
stats <- posthoc.friedman.nemenyi.test(data)
matrix_stats <- stats[3]
mat_st <- do.call(rbind, matrix_stats)
mat_st[upper.tri(mat_st)] <- t(mat_st)[upper.tri(mat_st)]
shaffer_mat <- adjustShaffer(mat_st)
full <- matrix(unlist(stats[3]))
nemenyi <- full[1:11]
holm <- p.adjust(nemenyi, method = 'holm', n = length(nemenyi))
shaf <- shaffer_mat[,1]
pvals <- data.frame(nemenyi,holm,shaf)
# write file
write.csv(pvals, file = paste("/Users/gabriellamelki/Documents/Research/MultiInstanceLearning/WekaTesting/stats/",metric,"_pVal.csv", sep = ""))
}
